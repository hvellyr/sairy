;;; Copyright (c) 2017 Gregor Klinke
;;; All rights reserved.

(define (content-chapter title nd)
  (let* ((dont-show-number (string=? (data (attribute "show-number" nd)) "no"))
         (title-num-str (if dont-show-number
                            ""
                            (section-title-number nd)))
         (title-num-sosofo (literal title-num-str))
         (title-sosofo (section-title-sosofo title nd)))
    (make paragraph
      space-before: (display-space 7pt conditional?: #t)
      space-after: 3pt
      quadding: 'left
      first-line-start-indent: %page-left-offset-neg%
      start-indent: 0pt
      font-size: (font-size 4)
      line-spacing: (line-spacing 4)
      font-weight: 'bold
      end-indent: 15pt
      last-line-end-indent: -15pt

      (sosofo-append
       (format-title title-num-sosofo
                     (if (> (string-length title-num-str) 0)
                         (literal " ")
                         (empty-sosofo))
                     title-sosofo)
       (literal " ")
       (make line-field
         field-align: 'right
         (make page-number
           refid: (id nd)))
       ))))


(define (content-section title nd)
  (let* ((dont-show-number (string=? (data (attribute "show-number" nd)) "no"))
         (title-num-str (if dont-show-number
                            ""
                            (section-title-number nd)))
         (title-num-sosofo (literal title-num-str))
         (title-sosofo (section-title-sosofo title nd)))
    (make paragraph
      quadding: 'left
      first-line-start-indent: 0mm
      start-indent: 0pt
      font-size: (font-size 3)
      line-spacing: (line-spacing 3)
      end-indent: 15pt
      last-line-end-indent: -15pt

      (sosofo-append
       (make line-field
         field-width: 24pt
         field-align: 'left
         (sosofo-append
          title-num-sosofo
          (literal " ")))
       title-sosofo
       (literal " ")
       (make line-field
         field-align: 'right
         (make page-number
           refid: (id nd)))
       ))))


(mode content-mode
  (element section
    (content-section #f (current-node)))
  (element chapter
    (sosofo-append
     (content-chapter "Chapter" (current-node))
     (process-node-list (select-elements (children (current-node)) 'section))
     ))
  (element introduction
    (content-chapter "Introduction" (current-node)))
  (element index
    (content-chapter "Index" (current-node)))
  (element preface
    (content-chapter "Preface" (current-node)))
  (element appendix
    (sosofo-append
     (content-chapter "Appendix" (current-node))
     (process-node-list (select-elements (children (current-node)) 'section))
     ))
  )


(element showtoc
  (make display-group
    (with-mode content-mode
      (process-node-list (node-list
                          (select-elements (descendants (grove-root)) 'introduction)
                          (select-elements (descendants (grove-root)) 'preface)
                          (select-elements (descendants (grove-root)) 'chapter)
                          (select-elements (descendants (grove-root)) 'appendix)
                          (select-elements (descendants (grove-root)) 'index)
                          )
                         ))))


(element content
  (make display-group
    break-before?: 'page
    break-after?: 'page
    (format-section "Contents" (current-node))))


;;------------------------------------------------------------------------------

(define content-link-style
  (style
      score-type: 'none
      color: %html.link-color%
      ))

(define (content-chapter-html-navigation title nd)
  (let* ((title-num-sosofo (if %html.section-numbers%
                               (literal (section-title-number nd))
                               (empty-sosofo)))
         (title-sosofo (section-title-sosofo title nd)))
    (make link
      use: content-link-style
      destination: (node-list-address nd)

      (make paragraph
        space-before: (display-space 7pt conditional?: #t)
        space-after: 3pt
        quadding: 'left
        first-line-start-indent: 0mm
        start-indent: 0pt
        font-size: (font-size 4)
        line-spacing: (line-spacing 5)
        font-weight: 'bold
        end-indent: 15pt
        last-line-end-indent: -15pt

        (sosofo-append
         (if %html.section-numbers%
             (make line-field
               field-width: 24pt
               field-align: 'left
               (sosofo-append
                title-num-sosofo
                (literal " ")))
             (empty-sosofo))
         title-sosofo)))
    ))


(define (content-section-html-navigation title nd lvl)
  (let* ((title-num-sosofo (if %html.section-numbers%
                               (literal (section-title-number nd))
                               (empty-sosofo)))
         (number-tokens (section-title-number-tokens nd))
         (title-sosofo (section-title-sosofo title nd)))
    (make link
      use: content-link-style
      destination: (node-list-address nd)

      (make paragraph
        quadding: 'left
        first-line-start-indent: (if %html.section-numbers%
                                     0pt
                                     -10pt)
        start-indent: (if %html.section-numbers%
                          0pt
                          (+ (* (length number-tokens) 5pt) 10pt))
        font-size: (font-size lvl)
        line-spacing: (+ (line-spacing lvl) 5pt)
        end-indent: 15pt
        last-line-end-indent: -15pt

        (sosofo-append
         (if %html.section-numbers%
             (make line-field
               field-width: 24pt
               field-align: 'left
               (sosofo-append
                title-num-sosofo
                (literal " ")))
             (empty-sosofo))
         title-sosofo)))
    ))


(mode html-website-content-mode
  (element section
    (sosofo-append
     (content-section-html-navigation #f (current-node) 3)
     (process-node-list (select-elements (children (current-node)) 'subsection))))
  (element subsection
    (content-section-html-navigation #f (current-node) 2))
  (element chapter
    (sosofo-append
     (content-chapter-html-navigation "Chapter" (current-node))
     (process-node-list (select-elements (children (current-node)) 'section))
     ))
  (element introduction
    (content-chapter-html-navigation "Introduction" (current-node)))
  (element index
    (content-chapter-html-navigation "Index" (current-node)))
  (element preface
    (content-chapter-html-navigation "Preface" (current-node)))
  (element appendix
    (sosofo-append
     (content-chapter-html-navigation "Appendix" (current-node))
     (process-node-list (select-elements (children (current-node)) 'section))
     ))

  (element showtoc
    (make display-group
      (process-node-list (node-list
                          (select-elements (descendants (grove-root)) 'introduction)
                          (select-elements (descendants (grove-root)) 'preface)
                          (select-elements (descendants (grove-root)) 'chapter)
                          (select-elements (descendants (grove-root)) 'appendix)
                          (select-elements (descendants (grove-root)) 'index)
                          )
                         )))

  (element content
    (process-children))
  )
